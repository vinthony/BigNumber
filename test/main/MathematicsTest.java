package main;

import static org.junit.Assert.assertEquals;
import org.junit.Before;
import org.junit.Test;

public class MathematicsTest {

    @Before
    public void setUp() throws Exception {

    }

    @Test
    public void testAdd() throws Exception {
//        1111111111111 + 1
//        111111111111 + 9
//        111111111+1111111
        Mathematics instance = new Mathematics();
        assertEquals(instance.Add("0","0"),"0");
        assertEquals(instance.Add("",""),"");
        assertEquals(instance.Add("","0"),"");
        assertEquals(instance.Add("+12131-331","3"),"error");
        assertEquals(instance.Add("-------1","3"),"2");
        assertEquals(instance.Add("1","2"),"3");
        assertEquals(instance.Add("10000","1"),"10001");
        assertEquals(instance.Add("-9","1"),"-8");
        assertEquals(instance.Add("-9","-1"),"-10");
        assertEquals(instance.Add("10000000000000000000","90000000000000000000"),"100000000000000000000");
        assertEquals(instance.Add(


                ),

                );
        assertEquals(instance.Add("1213131","3"),"1213134");
        assertEquals(instance.Add("21313-21311","333333"),"error");
    }

    @Test
    public void testSub() throws Exception {
        Mathematics instance = new Mathematics();
        assertEquals(instance.Sub("0","0"),"0");
        assertEquals(instance.Sub("1", "2"),"-1");
        assertEquals(instance.Sub("10000", "1"),"9999");
        assertEquals(instance.Sub("99", "99"),"0");
        assertEquals(instance.Sub("10000000000000000000", "1"),"9999999999999999999");
        assertEquals(instance.Sub("200", "-80"),"280");
        assertEquals(instance.Sub("-100", "-1"),"-99");
        assertEquals(instance.Sub("-10000","3"),"-10003");
        assertEquals(instance.Sub("10000","3"),"9997");
        assertEquals(instance.Sub(



                );
        assertEquals(instance.Sub("20002000","1000"),"20001000");
        assertEquals(instance.Sub(
                        "2000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000200000000000000000002000000000000000000020000000000000000000",


        );
        assertEquals(instance.Sub("10001000","2000"),"9999000");
    }

    @Test
    public void testMul() throws Exception {
       Mathematics instance = new Mathematics();
        assertEquals(instance.Mul("10201","0"),"0");
        assertEquals(instance.Mul("3","5"),"15");
//        assertEquals(instance.Mul("3","-5"),"-15");
//        assertEquals(instance.Mul("-3","5"),"-15");
//        assertEquals(instance.Mul("-3","-5"),"15");

    }

    @Test
    public void testDiv() throws Exception {
        Mathematics instance = new Mathematics();
    }
}